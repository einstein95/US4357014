


*       I/O PORT DEFINITION AND ADDRESS
*
PORT1   EQU  $08        KEY COLUMN CONTROL BITS (OUTPUTS)
*                       BITS 0-2 LEFT KEYBOARD
*                       BITS 3-5 RIGHT KEYBOARD
CONTR1  EQU  $09        CONTROL FOR PORT 1
*
PORT2   EQU  $OA        KEYBOARD ROW INPUTS 3 BITS 0-2
*                       BITS 4-7 COINICIDENCE SELECT BITS OUTPUTS
CONTR2  EQU  $0B        CONTROL FOR PORT 2
*
PORT3   EQU  $1O        BALL CARRIER OUTPUT PORT BITS 0-3
*                       BIT 0=LSB
*                       BIT 4 CONTROLS DISPLAY  LOW=ENABLE
*                       BIT 5 PLAYER COLOR CONTROL  0=WHITE OFFENSE, 1=BLACK OFFENSE
*                       BIT 6 SRINE CONTROL  0=DISABLE 1=ENABLE
*                       BIT 7 WHISTLE CONTROL  0=DISABLE, 1=ENABLE
CONTR3  EQU  $11        CONTROL FOR PORT 3AND COINICIDENCE FLAG INPUT (BIT 7)
*
PORT4   EQU  $12        BIT 0 NOT USED
*                       BIT 1 COLOR CONTROL  1=BLACK, 0=WHITE
*                       BIT 2 COINICIDENCE RESET  RESET=HIGH
*                       BIT 3 PASS/BALL ENABLE  ENABLE=LOW
*                       BIT 4 POSITION LATCH SET CONTROL  SET=HIGH
*                       BIT 5 RESET TOP DISPLAY (YARDS, DOWNS)  RESET=HIGH
*                       BIT 6 INCREMENT YARDS TO GO DISPLAY  HIGH=INC
*                       BIT 7 INCREMENT DOWNS DISPLAY  HIGH=INC
CONTR4  EQU  $13        CONTROL FOR PORT 4
*
PORT5   EQU  $20        PLAYER POSITION INPUT PORT
*                       BITS 0-3 HORIZONTAL POSITION  0=LSB
*                       BITS 4-7 VERTICAL POSITION  4=LSB
CONTR5  EQU  $21        CONTROL FOR PORT 5 AND RESTART
*                       DOWNS SWITCH KICKOFF SWITCH INPUT BIT 7
PORT6   EQU  $22        PLAYER MOVE PORT
*                       BITS 0-3 PLAYER NUMBER 0=LSB
*                       BIT 4 HORIZONTAL MOVE OUTPUT  1=LEFT; 0=RIGHT
*                       BIT 5 VERTICAL MOVE OUTPUT 1=UP; 0=DOWN
*                       BIT 6 HORIZONTAL MOVE ENABLE  0=NO MOVE; 1=MOVE
*                       BIT 7 VERTICAL MOVE ENABLE 0=NO MOVE; 1=MOVE
CONTR6  EQU  $23        CONTROL FOR PORT 6
*
 PAGE
*
*CONTROL PORTION OF THE T. V. TEAMS PROGRAM
*----------------
*THIS PROGRAMS CALLS THE SUBROUTINES THAT PERFORM THE DIFFERENT
*PARTS OF THE FOOTBALL GAME
*THIS PROGRAM STARTS AT ADDRESS A050
*
*
        ORG  $A050
START   JSR  INIT       INITALIZE CONTROL REGISTERS AND I/O PORTS
        CLR  SIDE       SET WHITE TEAM UP AS OFFENSIVE
STARTA  CLR  PLAYER     CLEAR PLAYER NUMBER
        LDAA #50        SET TOTAL YARDS TO GO FOR SCORE
        STAA TOTAL
        STAA DISTOT
        JSR  INITDP     INITIALIZE DISPLAY VARIABLES
START1  JSR  TOPDSP     CALL TOP DISFLAY SET UP
        JSR  GND        GROUND ALL PLAYERS
        LDAA #$40
        STAA LOOP       SET LOOP COUNT FOR POSITION PLAYERS SUBROUTINE
        JSR  POSIT
        LDAA PORT3      ENABLE PLAYERS TURN OFF SCORE BOARD
        ANDA #$EF
        STAA PORT3
        LDAB PORT4      SET UP YARD LINE MARKER
        LDAA DISTOT     GET YARD LINE MARKER POSITION
        BPL  START2     BRANCH IF MARKER COLOR IS WHITE (MSB=0)
        ORAB #$02       SET COLOR TO BLACK
        BRA  START3     BRANCH
START2  ANDB #$FD       SET COLOR TO WHITE
START3  STAB PORT4
        ANDA #$7F       CLEAR THE COLOR BIT OFF
        LDAB DOWN
        STAB TEMP4
        STAA DOWN
        JSR  TOPDSP     CALL DISPLAY SET UP ROUTINE SET DISPLAY NUMBER
        LDAA TEMP4
        STAA DOWN
        JSR  KEYBRD     CALL KEYBOARD INPUT ROUTINE
        JSR  PLAY       CALL PLAY MOVE PLAYERS
        LDAA PORT3      ENABLE WHISTLE
        ORAA #$80
        STAA PORT3
        LDX  #$0400
        JSR  WAIT       CALL WAIT BEFORE DISABLING THE PLAYERS
        JSR  SCORE      CALL SCORE INCREMENT DISPLAYS
        BRA  START1     KICK OFF SWITCH NOT SET BRANCH
 PAGE
*
*INITIALIZE SUBROUTINE
*---------------------
*INITIALIZE ALL INPUT PORTS AND OUTPUT PORTS BY SETTING THE DATA DIRECTION
*AND CONTROL REGISTERS OF THE PIA'S
*
INIT    CLRA            CLEAR CONTROL REGISTERS
        STAA CONTR1
        STAA CONTR2
        STAA CONTR3
        STAA CONTR4
        STAA CONTR5
        STAA CONTR6
        STAA PORT5      SET UP INPUT PORT
        LDAA #$F8       SET PORT2 AS PART INPUT AND PART OUTPUT.  BITS 0-2 ARE INPUT BITS 4-7 ARE OUTPUT
        STAA PORT2
        LDAA #$FF       SET UF OUTPUT FORTS
        STAA PORT1
        STAA PORT3
        STAA PORT4
        STAA PORT5
        LDAA #$36       FIX CONTROL REGISTERS
        STAA CONTR1
        STAA CONTR2
        STAA CONTR3
        STAA CONTR4
        STAA CONTR5
        STAA CONTR6
        RTS             RETURN
 PAGE
*
*GROUND SUBROUTINE
*------------------
*THIS SUBROUTINE SENDS ALL PLAYERS TO THE BOTTOM RIGHT CORNER. IN SOME
*CASES A PLAYER CAN GET "STUCK" IN THE TOP RIGHT CORNER.
*THIS SUBROUTINE PREVENTS THIS FROM HAPPENING
*
GND     LDAA #$A0
        STAA LOOP       SET LOOP COUNTER CONTROLS NUMBER OF TIMES GND IS REPEATED
        LDAA #$FF
        STAA TIME       SET DUTY CYCLE TIMMER  CONTROLS LENGTH OF OUTPUT PULSE
GND1    LDAA PLAYER     GET PLAYER TO BE OPERATED ON'S NUMBER
        ORAA #$C0       APPEND MOVE COMMAND
        JSR  OUTPUT     CALL OUTPUT PROGRAM
        JSR  VALID      CALL INCREMENT PLAYER NUMBER
        BCC  GND1       BRANCH IF VALID PLAYER NUMBER
        DEC  LOOP       DECREMENT LOOP COUNT
        BNE  GND1       REPEAT IF NOT FINISHED
        RTS  RETURN
*
*
*
*OUTPUT SUBROUTINE
*-----------------
*THIS PROGRAM OUTPUTS THE MOVE COMMAND TO THE PLAYER CONTROL CIRCUIT
*REGISTER A CONTAINS THE PLAYER NUMBER AND DESIRED MOVE
*REGISTER B IS USED TO STORE THE PLAYER NUMBER
*THE DUTY CYCLE OF THE OUTPUT PULSE IS CONTROLLED BY THE VARIABLE TIME
*
OUTPUT  LDAB PLAYER     READ PLAYER NUMBER
OUTPUM  STAB PORT6      OUTFUT PLAYER NUMBER ONLY
        STAA PORT6      OUTPUT PLAYER NUMBER AND MOVE
        LDAA TIME       SET COUNTER FOR DUTY CYCLE
WAITOP  DECA            DECREMENT COUNTER
        BNE  WAITOP
        STAB PORT6      CLEAR OUTPUT STOP PULSE
        RTS  RETURN
 PAGE
*
*VALID SUBROUTINE
*----------------
*THIS SUBROUTINE INCREMENTS THE PLAYER NUMBER AND CONTROLS THE MEMORY
*POINTER
*PLAYER NUMBERS 0-4 ARE FOR LEFT SIDE
*PLAYER NUMBERS 8-C ARE FOR RIGHT SIDE
*THE BALL IS NOT CONTROLLED BY THIS PROGRAM
*WHEN THE PLAYER NUMBER IS GREATER THAN C THE CARRY IS SET AND THE
*PLAYER NUMBER IS SET TO 0 AND THE MEMORY POINTER IS SET BACK TO START OF
*THE DATA TABLE
*INDEX REGISTER (X) IS USED AS THE MEMORY POINTER
*
VALID   INC  PLAYER     INCREMENT THE PLAYER NUMBER
        INX             INCREMENT MEMORY POINTER
        LDAA PLAYER     REAL PLAYER NUMBER FOR TESTING
        CMPA #$04       TEST FOR OFFENSIVE PLAYER
        BLS  ENDVAL     OK BRANCH TO END
        CMPA #$07       TEST FOR DEFENSE PLAYER
        BHI  VALID1     DEFENSE BRANCH
        LDAA #$08       NOT OFFENSE OR DEFENSE SET TO DEFENSE
        STAA PLAYER
        BRA  ENDVAL     BRANCH TO END
VALID1  CMPA #$0C       TEST FOR DEFENSIVE PLAYER
        BLS  ENDVAL     OK BRANCH TO END
        CMPA #$0F       TEST FOR BALL
        BHI  VALID2     IF NOT BALL BRANCH
        LDAA #$0F       LOAD PLAYER NUMBER TO BALL
        STAA PLAYER     STORE
        BRA  ENDVAL     BRANCH TO END
VALID2  CLR  PLAYER     NO PLAYER NUMBER CLEAR PLAYER NUMBER
        LDX  POINTR     RESET MEMORY POINTER
        SEC             SET CARRY
        RTS             RETURN
ENDVAL  CLC             CLEAR CARRY VALID PLAYER NUMBER
        RTS             RETURN
 PAGE
*
*TOPDSP SUBROUTINE
*-----------------
*SETS UP THE TOP OF THE SCORE BOARD DISPLAY
*THE TOP OF THE SCORE BOARD CONTAINS THE DOWN NUMBER
*ON THE LEFT AND THE YARDS TO GO ON THE RIGHT
*
TOPDSP  LDAA PORT4      GENERATE RESET TOF OF DISFLAY PULSE
        ORAA #$20
        STAA PORT4
        ANDA #$DF
        STAA PORT4
        LDAB YTOGO      READ YARDS TO GO COUNT
TOP1    LDAA PORT4      GENERATE INCREMENT YARIS TO GO FULSE
        ORAA #$40
        STAA PORT4
        ANDA #$BF
        STAA PORT4
        DECB            DECREMENT B
        BNE  TOP1       BRANCH IF NOT DONE
        LDAB DOWN       READ DOWNS COUNT
TOP2    LDAA PORT4      GENERATE INCREMENT DOWNS FULSE
        ORAA #$80
        STAA PORT4
        ANDA #$7F
        STAA PORT4
        DECB            DECREMENT B
        BNE  TOP2       BRANCH IF NOT DONE
        RTS             RETURN
 PAGE
*
*POSIT SUBROUTINE
*----------------
*POSITION PLAYERS IN A LINE UP
*
POSIT   CLR  PLAYER     CLEAR PLAYER NUMBER
        LDX  #POS       LOAD MEMORY POINTER
        STX  POINTR     STORE IN POINTER FOR LATER USE
        LDAA #$80
        STAA TIME       SET UP DUTY CYCLE TIMER
POSIT1  JSR  READ       READ PLAYER POSITION
        JSR  DECIDE     DETERMINE MOVE
        JSR  OUTPUT     OUTPUT MOVE
        JSR  VALID      INCREMENT PLAYER NUMBER
        BCC  POSIT1     BRANCH IF NOT DONE
        DEC  LOOP       DECREMENT LOOP COUNTER
        BNE  POSIT1     BRANCH IF NOT DONE
        RTS             RETURN
 PAGE
*READ SUBROUTINE
*----------------
*READ PLAYER POSITION
*OUTPUT THE PLAYER NUMBER THEN WAIT FORA COMPLETE  RESTER SCAN (16MSEC)
*THAN READ THE POSITION OF THE PLAYER
*THE EXTERNAL POSITION LATCH IS SET TO FF BY A LOW TO HIGH PULSE
*POSITION WORD INPUT
*       4MSB=VERTICAL POSITION
*       0=TOP OF SCREEN
*       F=BOTTOM OF SCREEN
*       4LSB=HORIZONTAL POSITION
*       0=LEFT SIDE OF SCREEN
*       F=RIGHT SIDE OF SCREEN
*
READ    LDAB PLAYER     READ PLAYER NUMBER
READM   STAB PORT6      OUTPUT PLAYER NUMBER
        LDAA PORT4      GENERATE RESET POSITION LATCH PULSE
        ORAA #$10
        STAA PORT4
        ANDA #$EF
        STAA PORT4
        CLRB
        LDAA #$09       WAIT FOR 14MSEC
READ1   DECB
        BNE  READ1      BRANCH IF NOT DONE
        DECA
        BNE  READ1      BRANCH IF NOT DONE
        LDAA PORT5      READ PLAYER POSITION
        RTS             RETURN
 PAGE
*
*DECIDE SUBROUTINE
*-----------------
*THIS SUBROUTINE DETERMINES THE MOVE REQUIRED TO PUT THE PLAYER INTO THE
*DESIRED LINE-UP POSITION
*
DECIDE  STAA TEMP1      SAVE PLAYER POSITION
        ANDA #$0F       SAVE ONLY HORIZONTAL POSITION
        LDAB 0,X        REAL DESIRED POSITION
        ANDB #$0F       SAVE ONLY HORIZONTAL POSITION
        CBA             COMPARE ACTUAL WITH DESIRED
        BLS  RIGHT      IF ACTUAL LESS THAN DESIRED THAN BRANCH TO MOVE RIGHT
LEFT    LDAA #$50       LOAD MOVE LEFT COMMAND
        BRA  HORZ1      BRANCH ALWAYS
RIGHT   LDAA #$40       LOAD MOVE RIGHT COMMAND
HORZ1   STAA TEMP2      STORE MOVE COMMAND
        LDAA TEMP1      READ PLAYER POSITION
        ANDA #$F0       SAVE ONLY THE VERTICAL POSITION
        LDAB 0,X        REAL DESIRED POSITION
        ANDB #$F0       SAVE ONLY THE VERTICAL POSITION
        CBA             COMPARE ACTUAL WITH DESTRED
        BLS  DOWN1      BRANCH TO MOVE DOWN
UP      LDAA #$A0       LOAD MOVE UP COMMAND
        BRA  VERT1
DOWN1   LDAA #$80       LOAD MOVE DOWN COMMAND
VERT1   ORAA TEMP2      APPEND HORIZONTAL MOVE
        ORAA PLAYER     APPEND PLAYER NUMBER
        RTS             RETURN
 PAGE
*
*
*
*KEYBOARD SUBROUTINE
*-------------------
*       THIS SUBROUTINE CREATES THE MOVEMENT TABLE FOR EACH PLAYER AND
*AT THE SAME TIME KEEPS THE PLAYERS IN THEIR LINE-UP POSITION
*THE FIRST PART OF THE SUBROUTINE IS SIMULAR TO THE LINE-UP SUBROUTINE AND IS
*USED TO HOLD THE PLAYERS IN POSITION. WHILE THE OPERATORS ARE KEYING IN THEIR
*PROGRAMMED MOVES, THE KEYBOARD IS READ AND THE INPUTS DEBOUNCED. VALID INPUT DATA
*IS STORED IN THE MOVE TABLE.
*
*
KEYBRD  JSR  CLEAR      CLEAR THE VARIARLES FOR THE TABLE MAKING SUBROUTINE
KEYBR1  JSR  READ       READ THE PLAYER POSITION
        JSR  DECIDE     DETERMINE MOVE TO CORRECT POSITION
        JSR  OUTPUT     OUTPUT CORRECTION MOVE
        JSR  VALID      INCREMENT THE PLAYER NUMBER
        STX  TEMP3      STORE X REGISTER
        JSR  TABLER     CREATE MOVE TABLE
        LDX  TEMP3      RESTORE X REGISTER
        TST  FLAG2L     TEST FOR TABLE FINISHED
        BEQ  KEYBR1
        TST  FLAG2R
        BEQ  KEYBR1
        RTS             RETURN
 PAGE
CLEAR   CLR  FLAG2L     CLEAR THE OFFENSIVE KEYBOARD DONE FLAG
        CLR  FLAG2R     CLEAR THE DEFENSE KEYBOARD DONE FLAG
        CLR  CMNDR      CLEAR MOVE COUNT FOR RIGHT KEYBOARD
        CLR  CMNDL      CLEAR MOVE COUNT FOR LEFT KEYBOARD
        CLR  PNUML      CLEAR PLAYER NUMBER LEFT
        CLR  PNUMR      CLEAR PLAYER NUMBER LEFT
        CLR  CRNTL
        CLR  CRNTR
        CLR  OLDL
        CLR  OLDR
        CLR  VALIDL
        CLR  VALIDR
        CLR  FLAG1L
        CLR  FLAG1R
        LDAA #$FC
        STAA COUNTL
        STAA COUNTR
        LDAA $220
        STAA BLINKL
        STAA BLINKR
        LDAA #$40       SET DUTY CYCLE TIMMER
        STAA TIME
        RTS             RETURN
 PAGE
*MOVE 3 PLAYERS SUBROUTINE
*--------------------------
*      THIS SUBROUTINE MOVES 3 PLAYERS  THAN RETURNS TO THE CALLING ROUTINE.  IT
*UPDATES ALL THE COUNTERS THAT CONTROL THE WAY THE MOVE
*
MOVE3   LDAA #$03       SET LOOP COUNTER
        STAA TEMP1
MOVE31  LDAB PLAYER
        LDAA 0,X        GET MOVE
        ABA             APPEND PLAYER NUMBER TO A
        JSR  OUTPUT     OUTPUT MOVE
        JSR  VALID      INCREMENT FLAYER NUMBER
        LDAA PLAYER     CHECK FOR VALID PLAYER
        CMPA #$0F       IF BALL CLEAR
        BNE  MOVE32
        JSR  VALID
        DEC  LOOP       DECREMENT REPEAT COUNTER
        BNE  MOVE32     BRANCH IF NOT ZERO
        LDAA #$30
        STAA LOOP       RESET REPEAT COUNTER
        LDAA COUNT      READ MOVE COUNTER
        DECA            DECREMENT
        BEQ  MOVE32
        STAA COUNT      STORE MOVE COUNTER
        LDAA #$0A       LOAD COUNTER
        LDX  POINTR     LOAD MEMORY POINTER
MOVE3A  INX             INCREMENT MEMORY POINTER
        DECA
        BNE  MOVE32
        STX  POINTR     REPLACE NEW MEMORY POINTER
MOVE32  DEC  TEMP1
        BNE  MOVE31     BRANCH BACK IF NOT DGNE
        RTS             RETURN IF NOT DONE
 PAGE
*SCORE SUBROUTINE
*-----------------
* RULES:
*       PLAY STARTS AT 50 YARD LINE
*       TACKLE  TEAM GETS THE YARDS GAINED OR LOST
*       INCOMPLETE PASS   LOSE DONW
*       INTERCEPTED PASS  LOES BALL OTHER TEAM STARTS AT POINT OF INTERCEPTION
*       SCORE  BALL CARRIER RUNS OFF SCREEN OR TOTAL YARDS GAINED EQUALS 100
*       LOSE BALL AFTER 4TH DOWN IF YOU DON'T GAIN 10 YARDS
*CALCULATIONS:
*       BALL CARRIER - 08= YARDES GAINED OR LOST
*       YARDS TO GO-YARDS GAINED OR LOST=NEW YARDS TO GO
*       TOTAL+YARDS GAINED OR LOST=NEW TOTAL
*INPUTS:
*       INTPAS  INTERCEPTED PASS FLAG
*       INCPAS  INCOMPLETE PASS FLAG
*       POSITN  CURRENT BALL CARRIER POSITION
*       YTOGO   YARDS TO GO
*       TOTAL   TOTAL YARDS GAINED
*       DISTOT  YARD LINE MARKER FOR DISPLAY
*               MSB=1 DISPLAY BLACK
*               MSB=0 DISPLAY WHITE
*       DOWN    DOWN COUNT
*OUTPUTS:
*       YTOGO   NEW VALUE OF YARDS TO GO
*       TOTAL   NEW VALUE OF TOTAL YARDS GAINED
*       DOWN    NEW VALUE OF DOWN COUNT
*       DISTOT  NEW VALUE OF YARD MARKER POSITION FOR DISPLAY
*
SCORE   LDAA PORT3      ENABLE SCORE BOARD DISABLE PLAYERS
        EORA #$90       SET BIT 4 CLEAR BIT 7 LEAVE ALL OTHERS UNCHANGED
        STAA PORT3
        INC  DOWN       INCREMENT THE DOWN COUNT
        TST  INCPAS
        BMI  SCORE5     BRANCH IF INCOMPLETE PASS
        TST  INTPAS
        BPL  SCORE1     BRANCH IF NOT INTERCEPTED PASS
        LDAB #$05
        STAB DOWN       SET TO 5TH DOWN TO CHANGE TEAMS
SCORE1  LDAB POSITN     READ FINAL BALL CARRIER POSITION
        ANDB #$0F       SAVE ONLY HORIZONTAL COMPONENT OF POSITION
        CMPB #$0F       CHECK FOR OFF SCREEN  (SCORE)
        BNE  SCORE2     BRANCH IF NOT OFF SCREEN
        LDAA #100       SET TOTAL YARDS TO 100  (SCORE)
        STAA TOTAL
SCORE2  SUBB #$08       CALCULATE YARDS GAINED OR LOST
        ASLB            SCALE RESULT  (MULTIPLE BY 2)
        LDAA YTOGO
        SBA             CALCULATE NEW YARDS TO GO VALUE
        BGT  SCORE3     BRANCH IF GREATER THAN 0
        JSR  INITDP     CALL INITIALIZE DISPLAY VARIABLES REOUTINE
SCORE3  STAA YTOGO      STORE NEW VALUE OF YARDS TO GO
        ADDB TOTAL      CALCULATE NEW TOTAL
        CMPB #99        CHECK FOR OVER 100 YARNS GAINED (SCORE)
        BLS  SCORE4     BRANCH IF LESS THEN 160 YARDS GAINEL
        JSR  INITDP     INITIALIZE DISPLAY VARIABLES
        CLR  SIDE       CHANGE OFFENSIVE TEAM
        JSR  SRINE      CALL SOUND SRINE SUBROUTIWE
        LDAB #50
SCORE4  STAB TOTAL      STORE NEW VALUE OF TOTAL YARDS GAINED
SCORE5  LDAA DOWN
        CMPA #$05       CHECK FOR LAST DOWN
        BNE  SCORE6     BRANCH IF NOT LAST DOWN
        JSR  INITDP     INITIALIZE DISPLAY VARIABLES
        COM  SIDE       CHANGE OFFENSIVE TEAM
        LDAA PORT3      CHANGE COLOR OF OFFENSIVE TEAM
        EORA #$20
        STAA PORT3
        LDAA #100       CALCULATE NEW VALUE OF TOTAL YARDS GAINED
        SUBA TOTAL
        STAA TOTAL
SCORE6  LDAB TOTAL      TRANSFER TOTAL YARDS TO B
        CMPB #50        CHECK FOR YARD LINE COLOR
        BGT  SCORE7     BRANCH IF GREATER
        ANDB #$7F       CLEAR MSE
        TBA             TRANSFER B TO A
        BRA  SCORE8     BRANCH
SCORE7  LDAA #100       CALCULATE YARD LINE MARKER
        SBA
        ORAA #$80       SET  MSB COLOR BIT
SCORE8  TST  SIDE       DETERMINE WHO IS THE OFFENSIVE TEAM
        BPL  SCORE9     BRANCH IF WHITE IS OFFENSE
        EORA #$80       COMPELEMENT COLOR CONTROL SIGNAL

SCORE9  STAA DISTOT     STORE NEW VALUE OF YARD LINE MARKER NUMBER
        RTS             RETURN
 PAGE
*PLAY SUBROUTINE
*--------------
*THIS SUBROUTINE EXECUTIES THE PLAY STORED IN THE MOVE TABLE. ALL PLAYERS START
*WITH THE QUARTERBACK CONTROLLING THE BALL. THE OFFENSE OPERATOR MAY SELECT
*TO PASS THE BALL RY DEPRESSING A KEY. IF A TACKLE OCCURS AT ANY TIME THE PLAY IS ENDED.
*
PLAY    CLR  PLAYER
        CLR  TACKLE     CLEAR TACKLE FLAG
        CLR  PASSFG     CLEAR THE FASS FLAG
        CLR  INCPAS     CLEAR INCOMPLETE FASS FLAG
        CLR  COMPAS     CLEAR COMPLETE FASS FLAG
        CLR  INTPAS     CLEAR INTERCEPTED FASS FLAG
        CLR  VALIDL     CLEAR KEYBOARD INPUT WORD
        LDAA #$40       SET DUTY CYCLE TIMMER
        STAA TIME
        LDAA #$30       SET LOOP COUNTER
        STAA LOOP
        LDAA #05        SET MOVE COUNTER
        STAA COUNT
        LDX  #TABLE     SET MOVE TABLE POINTER
        STX  POINTR
        JSR  HIKE       CALL HIKE TO START PLAY
        TST  TACKLE     TEST THE TACKLE FLAG
        BMI  PLAY1      BRANCH IF TACKLE SET
        JSR  PASS       CALL PASS FLAY
PLAY1   TST  TACKLE     TEST TACKLE FLAG
        BMI  PLAY2      BRANCH IF TACKLE SET
        JSR  RUN        CALL RUN PLAY
PLAY2   RTS             RETURN
*
*
 PAGE
*HIKE SUBROUTINE
*---------------
*       THIS SUBROUTINE HIKES THE BALL FROM THE CENTER TO THE QUARTERBACK AND MOVES
*THE PLAYER ACCORDING TO THE PREPROGRAMMED MOVES STORED IN THE MOVE TABLE. THIS
*PROGRAM ALSO CHECKS THE KEYBOARD FORA PASS  COMMAND AND CHECKS FOR COINICIDENCE BETWEEN
*THE QUARTERBACK AND THE DEFENSIVE TEAM. IF COINICIDENCE OCCURS THE TACKLE FLAG IS SET.
*IF A PASS OCCURS THE PASS FLAG IS SET. THIS PROGRAM IS DONE WHEN EITHER THE TACKLE
*FLAG OR PASS FLAG ARE SET.
*
HIKE    LDAA #$03       SET BALL CARRIER NUMBER
        STAA BALCY      STORE BALL CARRIER NUMBER
        LDAA PORT3
        ANDA #$F0
        ORAA BALCY
        STAA PORT3      OUTPUT NEW BALL CARRIER
        LDAA #$F0
        STAA PORT2      SET FOR COINICIDENCE BETWEEN DEFENSE AND BALL CARRIER
HIKE1   LDAA PORT4
        ORAA #$04
        STAA PORT4
        ANDA #$FB
        STAA PORT4      RESET COINICIDENCE LATCH
        LDAA PORT3      RESET COINICIDENCE FLAG
        JSR  MOVE3      MOVE 3 PLAYERS
HIKE2   LDAB BALCY      BET THE BALL CARRIER NUMBER FOR READING HS POSITION
        JSR  READM      CALL READ MODIFIED SUBROUTINE
        CMPA #$FF       CHECK FOR VALID DATA
        BEQ  HIKE8
        STAA POSITN     SAVE BALL CARRIER POSITION
HIKE3   JSR  KEYL
        TST  VALID      TEST FOR VALID KEYBOARD INPUT
        BEQ  HIKE4      BRANCH IF NO KEYBOARD INPUT
        LDAA POSITN     LOAD THE BALL CARRIER LAST POSITION
        ANDA #$0F       SAVE ONLY THE HORIZONTAL POSITION
        CMPA #$07       CKECK TO SEE IF BALL CARRIER PAST THE LINE OF SCRIMAGE CAN'T PASS IF PASS LINE OF SCRIMAGE
        BLS  HIKE3A     BRANCH IF BEHIND THE LINE OF SCRIMAGE
        LDAA VALIDL     READ PASS DIRECTION
        ANDA #$0F       SAVE COLUMN NUMBER
        CMPA #$01       CHECK FOR FORWARD PASS COMMAND
        BNE  HIKE3A     BRANCH IF NOT FORWARD PASS
        LDAA #$FF       SET FLAGS INVALID PASS
        STAA TACKLE
        STAA INCPAS
HIKE3A  LDAA #$FF
        STAA PASSFG     SET PASS FLAG
HIKE4   LDAA CONTR3     READ COINICIDENCE INPUT
        BPL  HIKE5
        LDAA #$FF
        STAA TACKLE     SET TACKLE FLAG
HIKE5   LDAA POSITN
        ANDA #$F0       MASK OFF HORIZONTAL POSITION
        CMPA #$10       TEST FOR OUT OF BOUNDS (TOP)
        BHI  HIKE6
        LDAB #$FF
        STAB TACKLE     OUT OF BOUNDS SET TACKLE FLAG
HIKE6   CMPA #$D0       TEST FOR OUT OF BOUNDS (BOTTOM)
        BLS  HIKE7
        LDAB #$FF
        STAB TACKLE     OUT OF BOUNDS SET TACKLE FLAG
HIKE7   LDAA POSITN     CHECK FOR SCORE
        ANDA #$0F       SAVE ONLY HORIZONTAL POSITION
        CMPA #$0F
        BLT  HIKE8      NOTA SCORE  BRANCH
        LDAA #$FF       SET FLAGS FOR END OF PLAY
        STAA TACKLE
HIKE8   TST  TACKLE     CHECK FOR FINISHED LOOP
        BMI  HIKE9      NOT DONE LOOP
        TST  PASSFG
        BMI  HIKE9      NOT DONE YET LOOP
        LDAB #$0F       READ BALL POSITION
        JSR  READM
        STAA TEMP1      BALL POSITION
        ANDA #$0F       SAVE HORIZONTAL POSITION
        LDAB POSITN     READ QUARTERBACK POSITION
        ANDB #$0F       SAVE ONLY THE HORIZONTAL POSITION
        CBA             COMPARE POSITIONS
        BLS  HIKE8B     BRANCH IF LESS OR SANE
HIKESA  LDAA #$50       LOAD MOVE LEFT COMMAND
        BRA  HIKE8C     BRANCH
HIKE8B  LDAA #$40       LOAD MOVE RIGHT COMMAND
HIKE8C  STAA TEMP3      STORE HORIZONTAL MOVE
        LDAA TEMP1      GET VERTICAL POSITION OF BALL
        ANDA #$F0       SAVE ONLY VERTICAL FOSITION
        LDAB POSITN     GET GUARTERBACK FOSITION
        ANDB #$F0       SAVE ONLY VERTICAL FOSITION
        CBA             COMPARE POSITIONS
        BLS  HIKE8E     BRANCH TO MOVE TOWN IF LESS OR SAME
HIKE8D  LDAA #$A0       LOAD MOVE UP COMMAND
        BRA  HIKE8F     BRANCH
HIKE8E  LDAA #$80       LOAD MOVE DOWN COMMAND
HIKE8F  ORAA TEMP3      PUT HORIZONTAL AND VERTICAL MOVES TOGEATHER
        ORAA #$0F       APPEND BALL NUMBE
        LDAB #$0F       LOAD BALL NUMBER FOR OUTPUT SUBROUTINE
        JSR  OUTPUM     CALL OUTFUT MOVE SUBROUTINE
        JMP  HIKE1      NOT DONE RETURN BACK TO START OF HIKE ROUTINE
HIKE9   RTS             RETURN
 PAGE
*PASS SUBROUTINE
*---------------
*       THIS SUBROUTINE MOVES THE BALL AND THE PLAYERS WHILE WAITING FOR EITHER AN INCOMPLERT
*PASS, A COMPLETE PASS, OR AN INTERCEPTED PASS.
*
PASS    LDAA #$F0       SET PASS COUNT TIMER
        STAA PASSCT     CONTROLS LENGTH OF TIME PASS MAY OCCUR
        LDAA VALIDL     READ KEYBOARD INPUT
        CLR  COINUM     CLEAR COINICIDENCE SELECT NUMBER
        JSR  DECODM     DECODE KEYBOARD INPUT GET BALL MOVE COMMAND
        LDAA #$08       SET PASS OUTPUT SIGNAL
        ORAA PORT4
        STAA PORT4
        LDAB PORT3      OUTPUT BALL CARRIER NUMBER
        ANDB #$FO
        ORAB #$0F
        STAB PORT3
PASS1   LDAA MMBR       READ BALL MOVE COMMAND
        ORAA #$0F       APPEND BALL NUMBER
        LDAB #$0F
        JSR  OUTPUM     CALL OUTFUT MODIFIED SUBROUTINE
        LDAA PORT2      OUTPUT COINICIDENCE SELECT NUMBER
        ANDA #$0F
        ANDA COINUM     APPEND COINICIDENCE SELECT NUMBER
        STAA PORT2
        LDAA PORT4      RESET COINICIDENCE LATCH
        ORAA #$04
        STAA PORT4
        ANDA #$FB
        STAA PORT4
        LDAA PORT3      RESET COINICIDENCE FLAG
        JSR  MOVE3      MOVE 3 PLAYERS
PASS2   LDAB #$0F 
        JSR  READM      CALL READ MODIFIED SUBROUTINE
        CMPA #$FF       CHECK FOR VALID LATA
        BEQ  PASS5
        STAA POSITN     SAVE POSITION
PASS3   ANDA #$F0       MASK OFF HORIZONTAL POSITION
        CMPA #$10       TEST FOR OUTPUT OF BOUNDS (TOP)
        BHI  PASS4      BRANCH IF NOT OUT OF BOUNDS
        LDAB #$FF       SET TACKLE IF OUT OF BOUNDS
        STAB TACKLE 
        STAB INCPAS     SET INCOMPLETE PASS
PASS4   CMPA #$10       TEST FOR OUTPUT OF BOUNDS (BOTTOM)
        BLS  PASS4A     BRANCH IF NOT OUT OF BOUNDS
        LDAB #$FF       SET TACKLE IF OUT OF BOUNDS
        STAB TACKLE 
        STAB INCPAS     SET INCOMPLETE FASS FLAG
PASS4A  LDAA POSITN     READ PLAYER POSITION
        ANDA #30F       SAVE HORIZONTAL POSITION
        CMPA #$0F       CHECK FOR INCOMPLETE PASS OFF SCREEN
        BLT  PASS5      BRANCH IF GOOD PASS
        LDAA #$FF       SET FLAGS FOR INCOMPLETE PASS
        STAA TACKLE 
        STAA INCPAS 
PASS5   DEC  PASSCT     DECREMENT PASS COUNTER
        BNE  PASS6      BRANCH IF NOT ZERO
        LDAA #$FF       SET TACKLE FLAG
        STAA TACKLE 
        STAA INCPAS     SET INCOMPLETE PASS FLAG
PASS6   LDAA CONTR3     TEST FOR COINICIDENCE FLAG SET
        BPL  PASS7      BRANCH IF COINICIDENCE FLAG NOT SET
        LDAA COINUM     READ COINICINENCE SELECT NUMBER
        CMPA #$40       COMPARE   CHECK FOR OFFENSIVE PLAYER
        BHI  PASS6A     BRANCH IF NOT OFFENSIVE PLAYR
        LDAB #$FF 
        STAB COMPAS     SET COMPLETE PASS FLAG
PASS6A  CMPA #$70 
        BLS  PASS7
        LDAA #$FF 
        STAA INTPAS     SET INTERCEPTED PASS FLAG
        STAA TACKLE     SET TACKLE FLAG
PASS7   TST  INTPAS     CHECK PASS CONDITIONS FOR END OF LOOP
        BMI  PASS8
        TST  INCPAS
        BMI  PASS8
        TST  COMPAS
        BMI  PASS8
        LDAA COINUM 
PASS7A  ADDA #$10       INCREMENT COINICIDENCE SELECT NUMBER
        STAA COINUM     STORE NEW COINICIDENCE SELECT NUMBER
        CMPA #$30       CHECK FOR QUARTERBACK  QUARTERBACK CAN'T CATCH HIS OWN PASS
        BEQ  PASS7A     IF QUARTERBACK INCREMENT AGAIN
        CMPA #$10       CHECK FOR BLOCKER  BLOCKER CAN'T CATCH A PASS
        BEQ  PASS7A     BRANCH IF BLOCKER
        CMPA #$40 
        BLS  PASS7C
        CMPA #$70 
        BHI  PASS7B
        LDAA #$80 
        STAA COINUM 
        BRA  PASS7C
PASS7B  CMPA #$C0 
        BLS  PASS7C
        CLR  COINUM
PASS7C  JMP  PASS1      LOOP NOT FINISHED YET
PASS8   LDAA PORT4      DISABLE THE BALL
        ANDA #$F7 
        STAA PORT4 
        TST  INCPAS     CHECK TO SEE IF NO ONE CAUGHT THE PASS
        BNE  PASS9      BRANCH TO STOP PLAYER BLINKING
        LDAA COINUM     SET BALL CARRIER NUMBER TO FLAYER WHO COUGHT THE BALL
        LSRA            SHIFT LEFT TO MOVE 4 MSB TO 4LSB 
        LSRA  
        LSRA  
        LSRA  
        STAA BALCY 
        LDAA PORT3      OUTPUT NEW BALL CARRIER NUMBER
        ANDA #$F0 
        ORAA BALCY 
        STAA PORT3 
PASS9   RTS             RETURN
 PAGE
*RUN SUBROUTINE
*--------------
*       THIS SUBROUTINE CONTROLS THE BALL CARRIER AFTER A COMPLETED PASS. THIS SUBROUTINE
*STOPS PLAY AFTER THE BALL CARRIER IS TACKLED, GOES OUT OF BOUNDS, OR SCORES.
*
RUN     LDAA #$F0       SET COINICIDENCE WITH DEFENSIVE TEAM
        STAA PORT2 
RUN1    LDAA PORT4      RESET COINICIUENCE LATCH
        ORAA #$04 
        STAA PORT4 
        ANDA #$FB 
        STAA PORT3 
        LDAA PORT3      RESET COINICIDENCE FLAG
        JSR  MOVE3
RUN3    LDAB BALCY      GET BALL CARRIER NUMBER
        JSR  READM      CALL READ MODIFIED SUBROUTINE TO FIND BALL CARRIER POSITION
        CMPA #$FF       CHECK FOR VALID DATA
        BEQ  RUN8
        STAA POSITN     SAVE BALL CARRIER POSITION
RUN4    ANDA #$F0       MASK OFF THE HORIZONTAL. POSITION
        CMPA #$10       TEST FOR PLAYER OUT OF ROUNIIS (TOF)
        BHI  RUN5       BRANCH IF NOT OUT OF BOUNDS
        LDAB #$FF 
        STAB TACKLE     SET TACKLE FLAG OUT OF BOUNDS
RUN5    CMPA #10        TEST FOR OUT OF BOUNDS (BOTTOM)
        BLS  RUN6       BRANCH IF NQT OUT OF BOUNDS
        LDAA #$FF 
        STAA TACKLE     GET TACKLE FLAG OUT OF BOUNDS
RUN6    LDAA POSITN     GET BALL CARRIER LAST POSITION
        ANDA #$0F       SAVE ONLY THE HORIZONTAL FOSITION
        CMPA #$0F       CHECK FOR SCORE
        BLT  RUN7       BRANCH IF NOT SCORE
        LDAA #$FF       SET FLAGS FOR END OF PLAY
        STAA TACKLE 
RUN7    LDAA CONTR3     CHECK FOR COINICIDENCE FLAG
        BPL  RUN8       BRANCH IF NO COINICIDENCE
        LDAA #$FF 
        STAA TACKLE     SET TACKLE FLAG
RUN8    TST  TACKLE
        BMI  RUN9       BRANCH IF TACKLE SET
        JMP  RUN
RUN9    RTS             RETURN
 PAGE
*       INITIALIZE DISPLAY VARIABLES SUBROUTINE
*INPUTS:
*       DOWN    DOWN COUNT  (1 TO 4)
*       YTOGO   YARDS TO GO
*OUTFUTS:
*       DOWN    NEW DOWN VALUE  (1ST)
*       YTOGO   NEW YARDS TO GO VALUE  (10 YARDS)
*
INITDP  LDAA #$01       SET DOWN COUNT TO 15ST
        STAA DOWN 
        LDAA #$0A       SET YARDS TO GO TO 10
        STAA YTOGO 
        RTS RETURN